---
version: '3.4'

services:

  db-master:
    container_name: db-master
    image: mysql:5.7
    env_file:
      - .env
    ports:
      - "4000:3306"
    volumes:
      - ./scheme.sql:/docker-entrypoint-initdb.d/init.sql
      - ./cfg/master/init.sql:/docker-entrypoint-initdb.d/semisync.sql
      - ./data/db_master:/var/lib/mysql
      - ./cfg/master:/etc/mysql/conf.d

  db-slave1:
    container_name: db-slave1
    image: mysql:5.7
    env_file:
      - .env
    ports:
      - "4001:3306"
    volumes:
      - ./scheme.sql:/docker-entrypoint-initdb.d/init.sql
      - ./cfg/slave1/init.sql:/docker-entrypoint-initdb.d/semisync.sql
      - ./data/db_slave1:/var/lib/mysql
      - ./cfg/slave1:/etc/mysql/conf.d

  db-slave2:
    container_name: db-slave2
    image: mysql:5.7
    env_file:
      - .env
    ports:
      - "4002:3306"
    volumes:
      - ./scheme.sql:/docker-entrypoint-initdb.d/init.sql
      - ./cfg/slave2/init.sql:/docker-entrypoint-initdb.d/semisync.sql
      - ./data/db_slave2:/var/lib/mysql
      - ./cfg/slave2:/etc/mysql/conf.d

  proxysql:
    container_name: proxysql
    image: proxysql/proxysql:2.3.2
    volumes:
      - ./cfg/proxysql.cnf:/etc/proxysql.cnf
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"

  backend:
    build:
      context: .
      dockerfile: cmd/backend/Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - "./frontend/dist:/frontend"
    depends_on:
      - db-master
      - proxysql
    environment:
      WAIT_HOSTS: db-master:3306

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8085:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus

#  metrics:
#    container_name: metrics
#    image: warmans/prometheus-aggregate-exporter:v2.1.1
#    <<: *logging
#    ports:
#      - "8181:8080"
#    environment:
#      TARGETS: http://backend:2112/metrics
